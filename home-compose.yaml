version: "3"
name: home
services:
  code-server:
    image: lscr.io/linuxserver/code-server:latest
    container_name: code-server
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - PASSWORD=password #optional
      - HASHED_PASSWORD= #optional
      - SUDO_PASSWORD=password #optional
      - SUDO_PASSWORD_HASH= #optional
      - PROXY_DOMAIN=code.${PROXY_HOSTNAME} #optional
      - DEFAULT_WORKSPACE=/config/workspace #optional
    volumes:
      - ${CONFIG_PATH}/code:/config
    ports:
      - 5554:8443
    restart: unless-stopped
  homepage:
    image: ghcr.io/benphelps/homepage:latest
    container_name: homepage
    environment:
      PUID: 1000
      PGID: 1000
    ports:
      - 4000:3000
    volumes:
      - ${CONFIG_PATH}/HomePage:/app/config
      - /var/run/docker.sock:/var/run/docker.sock:ro # optional, for docker integrations
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway" # access host from within container

  pufferpanel:
    container_name: pufferpanel
    ports:
      - "8080:8080"
      - "5657:5657"
      - "25565:25565"
    volumes:
      - "${CONFIG_PATH}/PufferPanel:/etc/pufferpanel"
      - "${CONFIG_PATH}/PufferPanelServers:/var/lib/pufferpanel"
      - "/var/run/docker.sock:/var/run/docker.sock"
    restart: unless-stopped
    image: "pufferpanel/pufferpanel:java"

  sggwbot:
    environment:
      - BOT_TOKEN=${BOT_TOKEN}
    restart: unless-stopped
    container_name: sggwbot
    image: thephaseless/sggwbot:main

  filebrowser:
    volumes:
      - "/public:/srv"
      - "${CONFIG_PATH}/Files/filebrowser.db:/database.db"
      - "${CONFIG_PATH}/Files/.filebrowser.json:/.filebrowser.json"
    ports:
      - "900:80"
    image: filebrowser/filebrowser

  traefik:
    restart: unless-stopped
    container_name: traefik
    # The official v2 Traefik docker image
    image: traefik:latest
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - "--api.dashboard=true"
      - "--providers.docker"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.traefik.address=:8080"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entryPoint.permanent=true"
      - "--global.sendAnonymousUsage=true"
      - "--providers.file.directory=/config"
      - "--providers.file.watch=true"
      - "--certificatesResolvers.cloudflare.acme.storage=/cert/acme.json"
    environment:
      - PROXY_HOSTNAME=${PROXY_HOSTNAME}
      - TARGET_IP=${TARGET_IP}
    ports:
      # The HTTP port
      - "80:80"
      - "443:443"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ${CONFIG_PATH}/Traefik/cert:/cert
      - ${CONFIG_PATH}/Traefik/config:/config
      # - ./traefik.yaml:/etc/traefik/traefik.yaml
    labels:
      - traefik.http.routers.proxy.tls=true
      - traefik.http.routers.proxy.tls.certresolver=cloudflare
      - traefik.http.routers.proxy.tls.domains[0].main=${PROXY_HOSTNAME}
      - traefik.http.routers.proxy.tls.domains[0].sans=*.${PROXY_HOSTNAME}

  adguardhome:
    container_name: adguardhome
    image: adguard/adguardhome
    restart: unless-stopped
    volumes:
      - "${CONFIG_PATH}/AdGuard/work:/opt/adguardhome/work"
      - "${CONFIG_PATH}/AdGuard/conf:/opt/adguardhome/conf"
    ports:
      - "53:53/tcp" # DNS
      - "53:53/udp" # DNS
      - "82:80" # WebUI
      - "3000:3000/tcp" # Setup

  scanservjs:
    image: "sbs20/scanservjs:latest"
    ports:
      - "5555:8080"
    volumes:
      - "/var/run/dbus:/var/run/dbus"
      - "${MEDIA_PATH}/Scans:/app/data/output"
      - "${CONFIG_PATH}/Scanservjs:/app/config"
    restart: unless-stopped
    devices:
      - "/dev/bus/usb:/dev/bus/usb"
    container_name: scanservjs-container
    privileged: true

  wolweb:
    container_name: wolweb
    image: "ghcr.io/sameerdhoot/wolweb"
    restart: always
    volumes:
      - ${CONFIG_PATH}/WakeOnLAN/devices.json:/devices.json
    network_mode: host
    environment:
      WOLWEBHOST: "0.0.0.0"
      WOLWEBPORT: "6666"
      WOLWEBVDIR: "/"
      WOLWEBBCASTIP: "192.168.1.255:9"
