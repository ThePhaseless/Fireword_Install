name: fireword
services:
  traefik:
    restart: unless-stopped
    container_name: traefik
    # The official v2 Traefik docker image
    image: traefik:latest
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - "--api.dashboard=true"
      - "--providers.docker"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.traefik.address=:8080"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entryPoint.permanent=true"
      - "--global.sendAnonymousUsage=true"
      - "--providers.file.directory=/config"
      - "--providers.file.watch=true"
      - "--certificatesResolvers.cloudflare.acme.storage=/cert/acme.json"
    environment:
      - PROXY_HOSTNAME=${PROXY_HOSTNAME}
      - TARGET_IP=${TARGET_IP}
    ports:
      # The HTTP port
      - "80:80"
      - "443:443"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ${CONFIG_PATH}/${CATEGORY}/Traefik/cert:/cert
      - ${CONFIG_PATH}/${CATEGORY}/Traefik/config:/config
      # - ./traefik.yaml:/etc/traefik/traefik.yaml
    labels:
      - traefik.http.routers.proxy.tls=true
      - traefik.http.routers.proxy.tls.certresolver=cloudflare
      - traefik.http.routers.proxy.tls.domains[0].main=${PROXY_HOSTNAME}
      - traefik.http.routers.proxy.tls.domains[0].sans=*.${PROXY_HOSTNAME}

  recyclarr:
    image: ghcr.io/recyclarr/recyclarr
    container_name: recyclarr
    user: ${PGID}:${PUID}
    volumes:
      - ${CONFIG_PATH}/${CATEGORY}/Recyclarr:/config
    environment:
      - TZ=${TIMEZONE}
  reiverr:
    image: ghcr.io/aleksilassila/reiverr:latest
    container_name: reiverr
    ports:
      - 9494:9494
    volumes:
      - ${CONFIG_PATH}/${CATEGORY}/Reiverr:/config
    restart: unless-stopped

  httpd:
    image: httpd:latest
    container_name: httpd
    ports:
      - "81:80"
    volumes:
      - ${CONFIG_PATH}/${CATEGORY}/Httpd:/usr/local/apache2/htdocs
    restart: unless-stopped

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${CONFIG_PATH}/${CATEGORY}/Bazarr:/config
      - ${MEDIA_PATH}:/data
    ports:
      - 6767:6767
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${CONFIG_PATH}/${CATEGORY}/Radarr:/config
      - ${MEDIA_PATH}:/data
    ports:
      - 7878:7878
    restart: unless-stopped

  sonarr:
    image: linuxserver/sonarr:develop
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${CONFIG_PATH}/${CATEGORY}/Sonarr:/config
      - ${MEDIA_PATH}:/data #optional
    ports:
      - 8989:8989
    restart: unless-stopped

  readarr:
    image: linuxserver/readarr:develop
    container_name: readarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${CONFIG_PATH}/${CATEGORY}/Readarr:/config
      - ${MEDIA_PATH}:/data
    ports:
      - 8787:8787
    restart: unless-stopped

  prowlarr:
    image: linuxserver/prowlarr:develop
    container_name: prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${CONFIG_PATH}/${CATEGORY}/Prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped

  qbittorrent:
    container_name: qBittorrent
    restart: unless-stopped
    image: ghcr.io/hotio/qbittorrent:latest
    ports:
      - 3434:8080
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK=002
      - TZ=${TIMEZONE}
    volumes:
      - ${CONFIG_PATH}/${CATEGORY}/qBittorrent:/config
      - ${MEDIA_PATH}:/data

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    ports:
      - 5055:5055
    volumes:
      - ${CONFIG_PATH}/${CATEGORY}/Jellyseerr:/app/config
    restart: unless-stopped

  jellyfin:
    image: linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
      - JELLYFIN_PublishedServerUrl=${JELLYFIN_PUBLIC_IP}
    volumes:
      - ${CONFIG_PATH}/${CATEGORY}/Jellyfin:/config
      - ${MEDIA_PATH}:/data
    ports:
      - 8096:8096
      - 7359:7359/udp
      - 1900:1900/udp
    restart: unless-stopped
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
      - /dev/dri/card0:/dev/dri/card0

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --cleanup
    restart: unless-stopped

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=${TIMEZONE}
    ports:
      - 8191:8191
    restart: unless-stopped
