services:
  traefik:
    restart: unless-stopped
    container_name: traefik
    # The official v2 Traefik docker image
    image: traefik:latest
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - "--api.dashboard=true"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.traefik.address=:8080"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entryPoint.permanent=true"
      - "--global.sendAnonymousUsage=true"
      - "--providers.file.directory=/config"
      - "--providers.file.watch=true"
      - "--certificatesResolvers.cloudflare.acme.storage=/cert/acme.json"
      - "--certificatesResolvers.cloudflare.acme.dnsChallenge.provider=cloudflare"
    environment:
      - HOSTNAME=${HOSTNAME}
      - HOST_IP=${HOST_IP}
      - PROXY_IP=${PROXY_IP}
      - TARGET_IP=${TARGET_IP}
    ports:
      # The HTTP port
      - "80:80"
      # The HTTPS port
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "8090:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - ${CONFIG_PATH}/${CATEGORY}/cert:/cert
      - ${CONFIG_PATH}/${CATEGORY}/config:/config
    labels:
      - traefik.http.routers.proxy.tls=true
      - traefik.http.routers.proxy.tls.certresolver=cloudflare
      - traefik.http.routers.proxy.tls.domains[0].main=${HOSTNAME}
      - traefik.http.routers.proxy.tls.domains[0].sans=*.${HOSTNAME}
